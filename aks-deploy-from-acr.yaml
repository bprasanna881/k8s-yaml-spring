apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azure-disk
provisioner: kubernetes.io/azure-disk
parameters:
  storageaccounttype: Standard_LRS
  kind: managed
---
#pvc provisioning
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-disk-claim-1
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: managed-csi
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-springboot-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - name: my-springboot-app
        image: akspvc.azurecr.io/bprasanna881/spring-aks:#{Build.BuildId}#
        imagePullPolicy: Always
        ports:
        - containerPort: 8085
        volumeMounts:
            - mountPath: /test-pd
              name: test-volume
      volumes:
      - name: test-volume
        persistentVolumeClaim:
          claimName: my-disk-claim-1
# service type loadbalancer       
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-app
    k8s-app: springboot-app
  name: springboot-app
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8085
  type: LoadBalancer
  selector:
    app: springboot-app